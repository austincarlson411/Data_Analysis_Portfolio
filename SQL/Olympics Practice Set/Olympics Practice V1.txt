#For this SQL project i will be answering 14 question from this data set
#Let start by introducing the table 

SELECT 
  *
FROM
  fine-guru-390913.Olympics.Athlete_Events;

#1.How many olympics games have been held?
SELECT 
  COUNT(DISTINCT(GAMES))
FROM
  fine-guru-390913.Olympics.Athlete_Events;

#2. List down all Olympics games held so far.

SELECT
  DISTINCT(Games)
FROM
  fine-guru-390913.Olympics.Athlete_Events
ORDER BY 
  Games;

#3. Mention the total no of nations who participated in each olympics game?

SELECT 
  COUNT(DISTINCT(NOC)) AS Name_Of_Country, 
Games
FROM 
  fine-guru-390913.Olympics.Athlete_Events
GROUP BY Games 
ORDER BY Games;

#4. Which year saw the highest and lowest no of countries participating in olympics?

#Highest
SELECT 
  COUNT(DISTINCT(NOC)) AS Name_Of_Country, 
Games
FROM 
  fine-guru-390913.Olympics.Athlete_Events
GROUP BY Games 
ORDER BY Games DESC
LIMIT 1;

#Lowest
SELECT 
  COUNT(DISTINCT(NOC)) AS Name_Of_Country, 
Games
FROM 
  fine-guru-390913.Olympics.Athlete_Events
GROUP BY Games 
ORDER BY Games
LIMIT 1;

#5. Which nation has participated in all of the olympic games?

SELECT Region, COUNT(DISTINCT(Games)) AS Total_Games
FROM
  fine-guru-390913.Olympics.Athlete_Events
JOIN
  Olympics.NOC_Region
ON
  NOC_Region.NOC = Athlete_Events.NOC
GROUP BY
  Region
HAVING COUNT(DISTINCT(Games)) = 51;

#6. Identify the sport which was played in all summer olympics.

# Checking # of Summer Games
SELECT
  COUNT(DISTINCT(Games))
FROM
  fine-guru-390913.Olympics.Athlete_Events
WHERE
  Season = 'Summer';

WITH
  Summer_Games AS (
    SELECT 
      COUNT(DISTINCT(games)) AS Total_Games, Sport
    FROM
      fine-guru-390913.Olympics.Athlete_Events
    WHERE Season = 'Summer'
    GROUP BY
      Sport
  )
SELECT sport, Total_Games
FROM Summer_Games
WHERE Total_Games = 29;

#7. Which Sports were just played only once in the olympics?

WITH
  Total_Played AS (
    SELECT 
      COUNT(DISTINCT(games)) AS Total_Games, Sport
    FROM
      fine-guru-390913.Olympics.Athlete_Events
    GROUP BY
      Sport
  )
SELECT sport, Total_Games
FROM Total_Played
WHERE Total_Games = 1;

#8. Fetch the total no of sports played in each olympic games.

SELECT
  DISTINCT(games), COUNT(DISTINCT(Sport)) As Total_Sports
FROM
  fine-guru-390913.Olympics.Athlete_Events
GROUP BY
  Games
ORDER BY
  Total_Sports DESC;

#9. Fetch details of the oldest athletes to win a gold medal.

SELECT
  *
FROM
 fine-guru-390913.Olympics.Athlete_Events
WHERE
  Medal = 'Gold' AND Age != 'NA'
ORDER BY
  Age DESC
LIMIT 1;

#10. Find the Ratio of male and female athletes participated in all olympic games.
SELECT
  (SELECT
    COUNT(Sex)
  FROM
    fine-guru-390913.Olympics.Athlete_Events
  WHERE
    Sex = 'M'
  ) AS Males_In_Olympics,
  (
    SELECT
  COUNT(Sex)
FROM
  fine-guru-390913.Olympics.Athlete_Events
WHERE
  Sex = 'F'
  ) AS Females_In_Olympics,
  #(Males_In_Olympics/Females_In_Olympics) AS Gender_Ratio
FROM
  fine-guru-390913.Olympics.Athlete_Events
LIMIT 1;
#11. Fetch the top 5 athletes who have won the most gold medals.
  SELECT
    Name, COUNT(Medal) AS Number_Of_Golds
  FROM
    fine-guru-390913.Olympics.Athlete_Events
  WHERE
    Medal = 'Gold'
  GROUP BY
    Name
  ORDER BY
    COUNT(Medal) DESC
  LIMIT 5;
#12. Fetch the top 5 athletes who have won the most medals (gold/silver/bronze).
  SELECT
    Name, COUNT(Medal) AS Number_Of_Golds
  FROM
    fine-guru-390913.Olympics.Athlete_Events
  WHERE
    Medal = 'Gold' OR Medal = 'Silver' OR Medal = 'Bronze'
  GROUP BY
    Name
  ORDER BY
    COUNT(Medal) DESC
  LIMIT 5;

#13. Fetch the top 5 most successful countries in olympics. Success is defined by no of medals won.

  SELECT
    Region, COUNT(Medal) AS Number_Of_Medals
  FROM
    fine-guru-390913.Olympics.Athlete_Events
  JOIN
    fine-guru-390913.Olympics.NOC_Region
  ON
    NOC_Region.NOC = Athlete_Events.NOC
  WHERE
    Medal = 'Gold' OR Medal = 'Silver' OR Medal = 'Bronze'
  GROUP BY
    Region
  ORDER BY
    COUNT(Medal) DESC
  LIMIT 5;

#14. List down total gold, silver and broze medals won by each country.
# Not Broken Down
  SELECT
    Region, COUNT(Medal) AS Number_Of_Medals
  FROM
    fine-guru-390913.Olympics.Athlete_Events
  JOIN
    fine-guru-390913.Olympics.NOC_Region
  ON
    NOC_Region.NOC = Athlete_Events.NOC
  WHERE
    Medal = 'Gold' OR Medal = 'Silver' OR Medal = 'Bronze'
  GROUP BY
    Region
  ORDER BY
    COUNT(Medal) DESC;

# Broken Down
WITH
  Total_Golds AS (
    SELECT Region AS Region_G, COUNT(Medal) AS Num_Of_Golds
  FROM
    fine-guru-390913.Olympics.Athlete_Events
  JOIN
    fine-guru-390913.Olympics.NOC_Region
  ON
    NOC_Region.NOC = Athlete_Events.NOC
  WHERE
    Medal = 'Gold'
  GROUP BY
    Region_G
  ORDER BY
    COUNT(Medal) DESC
  ),
  Total_Silvers AS (
    SELECT Region AS Region_S, COUNT(Medal)  AS Num_Of_Silvers 
  FROM
    fine-guru-390913.Olympics.Athlete_Events
  JOIN
    fine-guru-390913.Olympics.NOC_Region
  ON
    NOC_Region.NOC = Athlete_Events.NOC
  WHERE
    Medal = 'Silver'
  GROUP BY
    Region_S
  ORDER BY
    COUNT(Medal) DESC
  ),
  Total_Bronzes AS (
    SELECT Region AS Region_B, COUNT(Medal) AS Num_Of_Bronzes
  FROM
    fine-guru-390913.Olympics.Athlete_Events
  JOIN
    fine-guru-390913.Olympics.NOC_Region
  ON
    NOC_Region.NOC = Athlete_Events.NOC
  WHERE
    Medal = 'Bronze'
  GROUP BY
    Region_B
  ORDER BY
    COUNT(Medal) DESC
  )
SELECT
  Region, Num_of_Golds, Num_of_Silvers, Num_Of_Bronzes 
FROM
  Total_Golds
JOIN
  Total_Silvers
ON
  Total_Silvers.Region_S = Total_Golds.Region_G
JOIN
  Total_Bronzes
ON
  Total_Bronzes.Region_B = Total_Silvers.Region_S
JOIN
  fine-guru-390913.Olympics.NOC_Region
ON
  NOC_Region.Region = Total_Golds.Region_G
GROUP BY
  Region, Num_Of_Golds, Num_Of_Silvers, Num_Of_Bronzes
ORDER BY
  Num_Of_Golds DESC;